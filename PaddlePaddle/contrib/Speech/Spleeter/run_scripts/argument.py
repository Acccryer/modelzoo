import argparse
def config():
    parser = argparse.ArgumentParser()
    parser.add_argument('-m','--mode', type=str, default="train") # mode
    parser.add_argument('-e','--epoch', type=int, default=500) # epoch
    parser.add_argument('-bs','--batch_size', type=int, default=24) # batch_size
    parser.add_argument('-lo','--load_optimizer', type=bool, default=False) # load_optimizer
    parser.add_argument('-npn','--nproc_per_node', type=int, default=1) # devices num
    parser.add_argument('-d','--device', type=str, default="sdaa") # devices num
    parser.add_argument('-mn','--model_name', type=str, default="2instruments")
    parser.add_argument('-ma','--margin', type=float, default=.5) # 'margin': 0.5,
    parser.add_argument('-cd','--chunk_duration', type=float, default=20.) # 'chunk_duration': 20.0,
    parser.add_argument('-sr','--sample_rate', type=int, default=44100) # 'sample_rate': 44100,
    parser.add_argument('-fl','--frame_length', type=int, default=4096) # 'frame_length': 4096,
    parser.add_argument('-fs','--frame_step', type=int, default=1024) # 'frame_step': 1024,
    parser.add_argument('-T','--T', type=int, default=512) # 'T': 512,
    parser.add_argument('-F','--F', type=int, default=1024) # 'F': 1024,
    parser.add_argument('-ncps','--n_chunks_per_song', type=int, default=15) # 'n_chunks_per_song': 15,
    # Manifest generated by preprocess.py
    parser.add_argument('-tm','--train_manifest', type=str, default=r'manifest.csv') # 'train_manifest': r'manifest.csv', 
    parser.add_argument('-td','--train_dataset', type=str, default=r'dataset') # 'train_dataset' : r'dataset',
    parser.add_argument('-o','--optimizer', type=str, default='adam') # 'optimizer': 'adam',
    parser.add_argument('-l','--loss', type=str, default='l1') # 'loss': 'l1',
    parser.add_argument('-mo','--momentum', type=float, default=.9) # 'momentum': .9,
    parser.add_argument('-da','--dampening', type=float, default=0.) # 'dampening': 0.,
    parser.add_argument('-lr','--lr', type=float, default=1e-5) # 'lr': 1e-5,
    parser.add_argument('-lrd','--lr_decay', type=float, default=.0) # 'lr_decay': 0.,
    parser.add_argument('-wd','--wd', type=float, default=0.00001) # 'wd': 0.00001,
    parser.add_argument('-mdir','--model_dir', type=str, default='model') # 'model_dir': 'model',
    parser.add_argument('-start','--start', type=int, default=0) # 'start': 0,
    parser.add_argument('-lm','--load_model', type=bool, default=True) # 'load_model': True, 
    parser.add_argument('-seed','--seed', type=int, default=123456) # 'load_model': True, 
    parser.add_argument('-keep_ckpt','--keep_ckpt', type=int, default=1) # 'keep_ckpt' : 1,
    parser.add_argument('-trainer','--trainer', type=str, default="PlumBlossom") # 'trainer' : "PlumBlossom",
    parser.add_argument('-cls','--clean_logs', type=bool, default=True) # 'clean_logs' : True,
    parser.add_argument('-amp','--amp', type=bool, default=False) # 'amp' : False

    return parser.parse_args()